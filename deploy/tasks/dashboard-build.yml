- name: Start with docker compose
  docker_compose:
    project_src: "{{deploy_directory}}"
    build: yes
    remove_orphans: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
  environment:
    RAILS_ENV: production
  register: compose_out

- name: Precompile assets
  command: docker-compose exec rails rails assets:precompile
  args:
    chdir: "{{deploy_directory}}" 
  register: assets_out

- debug: msg="{{ assets_out.stdout_lines }}"

- name: Restart to pick up assets
  docker_compose:
    project_src: "{{deploy_directory}}"
    build: no
    restarted: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
  environment:
    RAILS_ENV: production
  notify: refresh browser

- name: Clean assets
  command: docker-compose exec rails rails assets:clean
  args:
    chdir: "{{deploy_directory}}" 
  register: assets_out

- debug: var=assets_out.stdout

- name: Rails db:migrate
  command: docker-compose exec rails rails db:migrate
  args:
    chdir: "{{deploy_directory}}" 
  register: db_migrate

- debug: msg="{{ db_migrate.stdout_lines }}"

- name: Install electron dependencies
  npm:
    path: "{{deploy_directory}}/electron"

- name: Build electron app
  command: npm run build
  args:
    chdir: "{{deploy_directory}}/electron" 
  register: electron_build

- debug: msg="{{ electron_build.stdout_lines }}"
